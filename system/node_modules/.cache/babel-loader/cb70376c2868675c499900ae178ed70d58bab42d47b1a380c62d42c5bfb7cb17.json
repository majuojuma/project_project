{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJUO\\\\Desktop\\\\FTEND\\\\system\\\\src\\\\component\\\\Sheha\\\\Varifypage.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import Nav from '../Navigation/Nav';\n\n// const VerifyEvent = () => {\n//   const { eventId } = useParams();\n//   const [eventDetails, setEventDetails] = useState({});\n//   const [description, setDescription] = useState('');\n//   const navigate = useNavigate();  // useNavigate instead of useHistory\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:8080/api/v1/event/getbyid/${eventId}`)\n//       .then((response) => {\n//         setEventDetails(response.data);\n//       })\n//       .catch(error => {\n//         console.error(\"There was an error fetching the event details!\", error);\n//       });\n//   }, [eventId]);\n\n//   const handleVerification = () => {\n//     axios.post(`http://localhost:8080/api/v1/sheha/verify/${eventId}`, { description })\n//       .then(() => {\n//         alert('Event has been verified and the officer has been notified.');\n//         navigate('/eventview'); // Use navigate instead of history.push\n//       })\n//       .catch((error) => {\n//         console.error(\"There was an error verifying the event!\", error);\n//       });\n//   };\n\n//   return (\n//     <>\n//       <Nav />\n//       <div className=\"verify-event\" style={{marginLeft:\"17%\",marginTop:\"117px\"}}>\n//         <h1>Verify Event</h1>\n//         {eventDetails ? (\n//           <div>\n//             <p><strong>Event Name:</strong> {eventDetails.event_name}</p>\n//             <p><strong>Event Location:</strong> {eventDetails.event_location}</p>\n\n//             <label>\n//               Event Description:\n//               <textarea\n//                 name=\"description\"\n//                 value={description}\n//                 placeholder='comment about this event'\n//                 onChange={(e) => setDescription(e.target.value)}\n//                 required\n//               />\n//             </label>\n//             <button className='btn' onClick={handleVerification}>Verify Event</button>\n//           </div>\n//         ) : (\n//           <p>Loading event details...</p>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default VerifyEvent;\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Nav from '../Navigation/Nav';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifyEvent = () => {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const [eventDetails, setEventDetails] = useState({});\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // useNavigate instead of useHistory\n\n  useEffect(() => {\n    axios.get(`http://localhost:8080/api/v1/event/getbyid/${eventId}`).then(response => {\n      setEventDetails(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the event details!\", error);\n    });\n  }, [eventId]);\n  const handleVerification = () => {\n    axios.post(`http://localhost:8080/api/v1/sheha/verify/${eventId}`, {\n      description\n    }).then(response => {\n      setMessage('Event has been verified and notifications sent.');\n      setTimeout(() => {\n        navigate('/eventview'); // Use navigate instead of history.push\n      }, 2000); // Navigate after 2 seconds\n    }).catch(error => {\n      setMessage('Error verifying event: ' + error.response.data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verify-event\",\n      style: {\n        marginLeft: \"17%\",\n        marginTop: \"117px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Verify Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), eventDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Event Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this), \" \", eventDetails.event_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Event Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 16\n          }, this), \" \", eventDetails.event_location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Event Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: description,\n            placeholder: \"Comment about this event\",\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleVerification,\n          children: \"Verify Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading event details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VerifyEvent, \"Gea2RkVsQ0AbxhDRJxiWZq54TTs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerifyEvent;\nexport default VerifyEvent;\nvar _c;\n$RefreshReg$(_c, \"VerifyEvent\");","map":{"version":3,"names":["axios","React","useEffect","useState","useParams","useNavigate","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyEvent","_s","eventId","eventDetails","setEventDetails","description","setDescription","message","setMessage","navigate","get","then","response","data","catch","error","console","handleVerification","post","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginLeft","marginTop","event_name","event_location","name","value","placeholder","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MAJUO/Desktop/FTEND/system/src/component/Sheha/Varifypage.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import Nav from '../Navigation/Nav';\r\n\r\n// const VerifyEvent = () => {\r\n//   const { eventId } = useParams();\r\n//   const [eventDetails, setEventDetails] = useState({});\r\n//   const [description, setDescription] = useState('');\r\n//   const navigate = useNavigate();  // useNavigate instead of useHistory\r\n\r\n//   useEffect(() => {\r\n//     axios.get(`http://localhost:8080/api/v1/event/getbyid/${eventId}`)\r\n//       .then((response) => {\r\n//         setEventDetails(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error(\"There was an error fetching the event details!\", error);\r\n//       });\r\n//   }, [eventId]);\r\n\r\n//   const handleVerification = () => {\r\n//     axios.post(`http://localhost:8080/api/v1/sheha/verify/${eventId}`, { description })\r\n//       .then(() => {\r\n//         alert('Event has been verified and the officer has been notified.');\r\n//         navigate('/eventview'); // Use navigate instead of history.push\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"There was an error verifying the event!\", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Nav />\r\n//       <div className=\"verify-event\" style={{marginLeft:\"17%\",marginTop:\"117px\"}}>\r\n//         <h1>Verify Event</h1>\r\n//         {eventDetails ? (\r\n//           <div>\r\n//             <p><strong>Event Name:</strong> {eventDetails.event_name}</p>\r\n//             <p><strong>Event Location:</strong> {eventDetails.event_location}</p>\r\n            \r\n//             <label>\r\n//               Event Description:\r\n//               <textarea\r\n//                 name=\"description\"\r\n//                 value={description}\r\n//                 placeholder='comment about this event'\r\n//                 onChange={(e) => setDescription(e.target.value)}\r\n//                 required\r\n//               />\r\n//             </label>\r\n//             <button className='btn' onClick={handleVerification}>Verify Event</button>\r\n//           </div>\r\n//         ) : (\r\n//           <p>Loading event details...</p>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default VerifyEvent;\r\n\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Nav from '../Navigation/Nav';\r\n\r\nconst VerifyEvent = () => {\r\n  const { eventId } = useParams();\r\n  const [eventDetails, setEventDetails] = useState({});\r\n  const [description, setDescription] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();  // useNavigate instead of useHistory\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8080/api/v1/event/getbyid/${eventId}`)\r\n      .then((response) => {\r\n        setEventDetails(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"There was an error fetching the event details!\", error);\r\n      });\r\n  }, [eventId]);\r\n\r\n  const handleVerification = () => {\r\n    axios.post(`http://localhost:8080/api/v1/sheha/verify/${eventId}`, { description })\r\n      .then((response) => {\r\n        setMessage('Event has been verified and notifications sent.');\r\n        setTimeout(() => {\r\n          navigate('/eventview'); // Use navigate instead of history.push\r\n        }, 2000); // Navigate after 2 seconds\r\n      })\r\n      .catch((error) => {\r\n        setMessage('Error verifying event: ' + error.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"verify-event\" style={{ marginLeft: \"17%\", marginTop: \"117px\" }}>\r\n        <h1>Verify Event</h1>\r\n        {eventDetails ? (\r\n          <div>\r\n            <p><strong>Event Name:</strong> {eventDetails.event_name}</p>\r\n            <p><strong>Event Location:</strong> {eventDetails.event_location}</p>\r\n            \r\n            <label>\r\n              Event Description:\r\n              <textarea\r\n                name=\"description\"\r\n                value={description}\r\n                placeholder='Comment about this event'\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <button className='btn' onClick={handleVerification}>Verify Event</button>\r\n            {message && <p>{message}</p>}\r\n          </div>\r\n        ) : (\r\n          <p>Loading event details...</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyEvent;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJUO\\\\Desktop\\\\FTEND\\\\system\\\\src\\\\component\\\\Person\\\\EventStatistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Navigation/Nav';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventStatistics = () => {\n  _s();\n  const [eventStats, setEventStats] = useState({\n    crimeEvents: 0,\n    fireEvents: 0,\n    smugglingEvents: 0\n  });\n  useEffect(() => {\n    // Fetch event statistics from the backend API\n    fetch('/api/event-stats').then(response => response.json()).then(data => {\n      setEventStats({\n        crimeEvents: data.crimeEvents,\n        fireEvents: data.fireEvents,\n        smugglingEvents: data.smugglingEvents\n      });\n    });\n  }, []);\n  const maxEvents = Math.max(eventStats.crimeEvents, eventStats.fireEvents, eventStats.smugglingEvents);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Event Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-graph\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 100 100\",\n          preserveAspectRatio: \"none\",\n          children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n            fill: \"none\",\n            stroke: \"#4CAF50\",\n            strokeWidth: \"1\",\n            points: `0,${100 - eventStats.crimeEvents / maxEvents * 100} 50,${100 - eventStats.fireEvents / maxEvents * 100} 100,${100 - eventStats.smugglingEvents / maxEvents * 100}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Crime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Fire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Smuggling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(EventStatistics, \"z9oQ17pOLTWjxxko9Ru+168PmM0=\");\n_c = EventStatistics;\nexport default EventStatistics;\nvar _c;\n$RefreshReg$(_c, \"EventStatistics\");","map":{"version":3,"names":["React","useState","useEffect","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","EventStatistics","_s","eventStats","setEventStats","crimeEvents","fireEvents","smugglingEvents","fetch","then","response","json","data","maxEvents","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","className","viewBox","preserveAspectRatio","fill","stroke","strokeWidth","points","_c","$RefreshReg$"],"sources":["C:/Users/MAJUO/Desktop/FTEND/system/src/component/Person/EventStatistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Nav from '../Navigation/Nav';\r\n\r\nconst EventStatistics = () => {\r\n    const [eventStats, setEventStats] = useState({\r\n        crimeEvents: 0,\r\n        fireEvents: 0,\r\n        smugglingEvents: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch event statistics from the backend API\r\n        fetch('/api/event-stats')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setEventStats({\r\n                    crimeEvents: data.crimeEvents,\r\n                    fireEvents: data.fireEvents,\r\n                    smugglingEvents: data.smugglingEvents,\r\n                });\r\n            });\r\n    }, []);\r\n\r\n    const maxEvents = Math.max(eventStats.crimeEvents, eventStats.fireEvents, eventStats.smugglingEvents);\r\n\r\n    return (\r\n        <>\r\n            <Nav/>\r\n            <div className=\"event-statistics\">\r\n                <h2>Event Statistics</h2>\r\n                <div className=\"line-graph\">\r\n                    <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\r\n                        <polyline\r\n                            fill=\"none\"\r\n                            stroke=\"#4CAF50\"\r\n                            strokeWidth=\"1\"\r\n                            points={`0,${100 - (eventStats.crimeEvents / maxEvents) * 100} 50,${100 - (eventStats.fireEvents / maxEvents) * 100} 100,${100 - (eventStats.smugglingEvents / maxEvents) * 100}`}\r\n                        />\r\n                    </svg>\r\n                    <div className=\"labels\">\r\n                        <div>Crime</div>\r\n                        <div>Fire</div>\r\n                        <div>Smuggling</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventStatistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
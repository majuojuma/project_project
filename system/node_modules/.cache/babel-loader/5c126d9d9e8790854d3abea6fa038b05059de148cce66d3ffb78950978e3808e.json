{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJUO\\\\Desktop\\\\FTEND\\\\system\\\\src\\\\component\\\\Sheha\\\\EventView.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import Nav from '../Navigation/Nav';\n\n// const EventView = () => {\n//   const personId = parseInt(localStorage.getItem('userId'));\n\n//   const [events, setEvent] = useState([]);\n\n//   useEffect(() => {\n//     axios.get(\"http://localhost:8080/api/v1/event/all\")\n//       .then((response) => {\n//         const filterEventByUserId = response.data.filter(item => item.person.userId === personId);\n//         setEvent(filterEventByUserId);\n//       })\n//   }, []);\n//   const handleUpdate = (eventId) =>{\n//     axios.update(`http://localhost:8080/api/v1/event/update/${eventId}`)\n//     .then((response)=>{\n//       setEvent(events.filter(event =>event.event_id !== eventId));\n//     })\n//     .catch((error)=>{\n//       console.error(\"there is was an error updating the event\", error);\n//     }) ;\n//   }\n\n//   const handleDelete = (eventId) => {\n//     if(window.confirm('Are You Sure you Want to Delete')){\n//     axios.delete(`http://localhost:8080/api/v1/event/delete/${eventId}`)\n//       .then((response) => {\n//         // Remove the deleted event from the state\n//         setEvent(events.filter(event => event.event_id !== eventId));\n//       })\n//       .catch((error) => {\n//         console.error(\"There was an error deleting the event!\", error);\n//       });\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Nav />\n//       <div className=\"table-container\">\n//         <h4>View Event {personId}</h4>\n//         <table className=\"event-table\">\n//           <thead>\n//             <tr>\n//               <th>Event ID</th>\n//               <th>Event Name</th>\n//               <th>Event Type</th>\n//               <th>Event Location</th>\n//               <th>Time Posted</th>\n//               <th>Image</th>\n//               <th>Action</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {events.map((event) => (\n//               <tr key={event.event_id}>\n//                 <td>{event.event_id}</td>\n//                 <td>{event.event_name}</td>\n//                 <td>{event.event_type}</td>\n//                 <td>{event.event_location}</td>\n//                 <td>{event.time_posted}</td>\n//                 <td>\n//                   <img\n//                     src={`data:image/png;base64,${event.image}`}\n//                     alt={event.event_name}\n//                     className=\"event-image\"\n//                   />\n//                 </td>\n//                 <td>\n//                   <button className='btn' onClick={()=> handleUpdate(event.event_id)}>Update</button>\n//                 </td>\n//                 <td>\n//                   <button className='btn' onClick={() => handleDelete(event.event_id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default EventView;\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Nav from '../Navigation/Nav';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventView = () => {\n  _s();\n  const personId = parseInt(localStorage.getItem('userId'));\n  const [events, setEvent] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [currentEvent, setCurrentEvent] = useState(null);\n  const [formData, setFormData] = useState({\n    event_name: '',\n    event_type: '',\n    event_location: '',\n    time_posted: '',\n    image: ''\n  });\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/v1/event/all\").then(response => {\n      const filterEventByUserId = response.data.filter(item => item.person.userId === personId);\n      setEvent(filterEventByUserId);\n    });\n  }, []);\n  const handleUpdateClick = event => {\n    setCurrentEvent(event);\n    setFormData({\n      event_name: event.event_name,\n      event_type: event.event_type,\n      event_location: event.event_location,\n      time_posted: event.time_posted,\n      image: event.image\n    });\n    setShowPopup(true);\n  };\n  const handleUpdate = e => {\n    e.preventDefault();\n    axios.put(`http://localhost:8080/api/v1/event/update/${currentEvent.event_id}`, formData).then(response => {\n      setEvent(events.map(event => event.event_id === currentEvent.event_id ? response.data : event));\n      setShowPopup(false);\n    }).catch(error => {\n      console.error(\"There was an error updating the event!\", error);\n    });\n  };\n  const handleDelete = eventId => {\n    if (window.confirm('Are you sure you want to delete this event?')) {\n      axios.delete(`http://localhost:8080/api/v1/event/delete/${eventId}`).then(response => {\n        setEvent(events.filter(event => event.event_id !== eventId));\n      }).catch(error => {\n        console.error(\"There was an error deleting the event!\", error);\n      });\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"View Event \", personId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"event-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time Posted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.event_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.event_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.event_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.event_location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: event.time_posted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/png;base64,${event.image}`,\n                alt: event.event_name,\n                className: \"event-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => handleUpdateClick(event.ev),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => handleDelete(event.event_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, event.event_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), showPopup && currentEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setShowPopup(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleUpdate,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Event Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"event_name\",\n                value: formData.event_name,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Event Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"event_type\",\n                value: formData.event_type,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Event Location:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"event_location\",\n                value: formData.event_location,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Time Posted:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"time_posted\",\n                value: formData.time_posted,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Image (Base64):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"image\",\n                value: formData.image,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventView, \"k6RisbTGBJ7ZwxwpIUcydJ8yIhQ=\");\n_c = EventView;\nexport default EventView;\nvar _c;\n$RefreshReg$(_c, \"EventView\");","map":{"version":3,"names":["axios","React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","EventView","_s","personId","parseInt","localStorage","getItem","events","setEvent","showPopup","setShowPopup","currentEvent","setCurrentEvent","formData","setFormData","event_name","event_type","event_location","time_posted","image","get","then","response","filterEventByUserId","data","filter","item","person","userId","handleUpdateClick","event","handleUpdate","e","preventDefault","put","event_id","map","catch","error","console","handleDelete","eventId","window","confirm","delete","handleChange","name","value","target","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","ev","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/MAJUO/Desktop/FTEND/system/src/component/Sheha/EventView.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react';\r\n// import Nav from '../Navigation/Nav';\r\n\r\n// const EventView = () => {\r\n//   const personId = parseInt(localStorage.getItem('userId'));\r\n\r\n//   const [events, setEvent] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     axios.get(\"http://localhost:8080/api/v1/event/all\")\r\n//       .then((response) => {\r\n//         const filterEventByUserId = response.data.filter(item => item.person.userId === personId);\r\n//         setEvent(filterEventByUserId);\r\n//       })\r\n//   }, []);\r\n//   const handleUpdate = (eventId) =>{\r\n//     axios.update(`http://localhost:8080/api/v1/event/update/${eventId}`)\r\n//     .then((response)=>{\r\n//       setEvent(events.filter(event =>event.event_id !== eventId));\r\n//     })\r\n//     .catch((error)=>{\r\n//       console.error(\"there is was an error updating the event\", error);\r\n//     }) ;\r\n//   }\r\n\r\n//   const handleDelete = (eventId) => {\r\n//     if(window.confirm('Are You Sure you Want to Delete')){\r\n//     axios.delete(`http://localhost:8080/api/v1/event/delete/${eventId}`)\r\n//       .then((response) => {\r\n//         // Remove the deleted event from the state\r\n//         setEvent(events.filter(event => event.event_id !== eventId));\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"There was an error deleting the event!\", error);\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Nav />\r\n//       <div className=\"table-container\">\r\n//         <h4>View Event {personId}</h4>\r\n//         <table className=\"event-table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Event ID</th>\r\n//               <th>Event Name</th>\r\n//               <th>Event Type</th>\r\n//               <th>Event Location</th>\r\n//               <th>Time Posted</th>\r\n//               <th>Image</th>\r\n//               <th>Action</th>\r\n//               <th>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {events.map((event) => (\r\n//               <tr key={event.event_id}>\r\n//                 <td>{event.event_id}</td>\r\n//                 <td>{event.event_name}</td>\r\n//                 <td>{event.event_type}</td>\r\n//                 <td>{event.event_location}</td>\r\n//                 <td>{event.time_posted}</td>\r\n//                 <td>\r\n//                   <img\r\n//                     src={`data:image/png;base64,${event.image}`}\r\n//                     alt={event.event_name}\r\n//                     className=\"event-image\"\r\n//                   />\r\n//                 </td>\r\n//                 <td>\r\n//                   <button className='btn' onClick={()=> handleUpdate(event.event_id)}>Update</button>\r\n//                 </td>\r\n//                 <td>\r\n//                   <button className='btn' onClick={() => handleDelete(event.event_id)}>Delete</button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default EventView;\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Nav from '../Navigation/Nav';\r\n\r\nconst EventView = () => {\r\n  const personId = parseInt(localStorage.getItem('userId'));\r\n\r\n  const [events, setEvent] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [currentEvent, setCurrentEvent] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    event_name: '',\r\n    event_type: '',\r\n    event_location: '',\r\n    time_posted: '',\r\n    image: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/v1/event/all\")\r\n      .then((response) => {\r\n        const filterEventByUserId = response.data.filter(item => item.person.userId === personId);\r\n        setEvent(filterEventByUserId);\r\n      })\r\n  }, []);\r\n\r\n  const handleUpdateClick = (event) => {\r\n    setCurrentEvent(event);\r\n    setFormData({\r\n      event_name: event.event_name,\r\n      event_type: event.event_type,\r\n      event_location: event.event_location,\r\n      time_posted: event.time_posted,\r\n      image: event.image\r\n    });\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    axios.put(`http://localhost:8080/api/v1/event/update/${currentEvent.event_id}`, formData)\r\n      .then((response) => {\r\n        setEvent(events.map(event => \r\n          event.event_id === currentEvent.event_id ? response.data : event\r\n        ));\r\n        setShowPopup(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error updating the event!\", error);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (eventId) => {\r\n    if (window.confirm('Are you sure you want to delete this event?')) {\r\n      axios.delete(`http://localhost:8080/api/v1/event/delete/${eventId}`)\r\n        .then((response) => {\r\n          setEvent(events.filter(event => event.event_id !== eventId));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error deleting the event!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"table-container\">\r\n        <h4>View Event {personId}</h4>\r\n        <table className=\"event-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Event ID</th>\r\n              <th>Event Name</th>\r\n              <th>Event Type</th>\r\n              <th>Event Location</th>\r\n              <th>Time Posted</th>\r\n              <th>Image</th>\r\n              <th>Action</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {events.map((event) => (\r\n              <tr key={event.event_id}>\r\n                <td>{event.event_id}</td>\r\n                <td>{event.event_name}</td>\r\n                <td>{event.event_type}</td>\r\n                <td>{event.event_location}</td>\r\n                <td>{event.time_posted}</td>\r\n                <td>\r\n                  <img\r\n                    src={`data:image/png;base64,${event.image}`}\r\n                    alt={event.event_name}\r\n                    className=\"event-image\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <button className='btn' onClick={() => handleUpdateClick(event.ev)}>Update</button>\r\n                </td>\r\n                <td>\r\n                  <button className='btn' onClick={() => handleDelete(event.event_id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {showPopup && currentEvent && (\r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={() => setShowPopup(false)}>&times;</span>\r\n              <h2>Update Event</h2>\r\n              <form onSubmit={handleUpdate}>\r\n                <label>\r\n                  Event Name:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"event_name\"\r\n                    value={formData.event_name}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Event Type:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"event_type\"\r\n                    value={formData.event_type}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Event Location:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"event_location\"\r\n                    value={formData.event_location}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Time Posted:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"time_posted\"\r\n                    value={formData.time_posted}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Image (Base64):\r\n                  <textarea\r\n                    name=\"image\"\r\n                    value={formData.image}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <button type=\"submit\">Update</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventView;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
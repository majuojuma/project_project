{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJUO\\\\Desktop\\\\FTEND\\\\system\\\\src\\\\component\\\\Admin\\\\Event report.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Nav from '../Navigation/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportGenerator = () => {\n  _s();\n  const [events, setEvents] = useState([\n  // Sample data for events\n  {\n    id: 1,\n    date: '2024-01-01',\n    status: 'addressed'\n  }, {\n    id: 2,\n    date: '2024-01-02',\n    status: 'not addressed'\n  }, {\n    id: 3,\n    date: '2024-02-01',\n    status: 'addressed'\n  }\n  // Add more sample data as needed\n  ]);\n  const [reportData, setReportData] = useState({\n    dailyAverage: 0,\n    monthlyAverage: 0,\n    yearlyAverage: 0,\n    addressedCount: 0,\n    notAddressedCount: 0\n  });\n  const calculateReport = () => {\n    const currentDate = new Date();\n    const eventsByYear = events.filter(event => new Date(event.date).getFullYear() === currentDate.getFullYear());\n    const eventsByMonth = eventsByYear.filter(event => new Date(event.date).getMonth() === currentDate.getMonth());\n    const eventsByDay = eventsByMonth.filter(event => new Date(event.date).getDate() === currentDate.getDate());\n    const addressedCount = eventsByYear.filter(event => event.status === 'addressed').length;\n    const notAddressedCount = eventsByYear.filter(event => event.status === 'not addressed').length;\n    setReportData({\n      dailyAverage: eventsByDay.length,\n      monthlyAverage: eventsByMonth.length / new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate(),\n      yearlyAverage: eventsByYear.length / 12,\n      addressedCount,\n      notAddressedCount\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Report Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateReport,\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Report Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Daily Average Events: \", reportData.dailyAverage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monthly Average Events: \", reportData.monthlyAverage.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Yearly Average Events: \", reportData.yearlyAverage.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Addressed Events: \", reportData.addressedCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Not Addressed Events: \", reportData.notAddressedCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ReportGenerator, \"zm0fGoyPljYKVG1PRlrBZG22dVk=\");\n_c = ReportGenerator;\nexport default ReportGenerator;\nvar _c;\n$RefreshReg$(_c, \"ReportGenerator\");","map":{"version":3,"names":["React","useState","Nav","jsxDEV","_jsxDEV","ReportGenerator","_s","events","setEvents","id","date","status","reportData","setReportData","dailyAverage","monthlyAverage","yearlyAverage","addressedCount","notAddressedCount","calculateReport","currentDate","Date","eventsByYear","filter","event","getFullYear","eventsByMonth","getMonth","eventsByDay","getDate","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/MAJUO/Desktop/FTEND/system/src/component/Admin/Event report.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Nav from '../Navigation/Nav';\r\n\r\nconst ReportGenerator = () => {\r\n    const [events, setEvents] = useState([\r\n        // Sample data for events\r\n        { id: 1, date: '2024-01-01', status: 'addressed' },\r\n        { id: 2, date: '2024-01-02', status: 'not addressed' },\r\n        { id: 3, date: '2024-02-01', status: 'addressed' },\r\n        // Add more sample data as needed\r\n    ]);\r\n    const [reportData, setReportData] = useState({\r\n        dailyAverage: 0,\r\n        monthlyAverage: 0,\r\n        yearlyAverage: 0,\r\n        addressedCount: 0,\r\n        notAddressedCount: 0,\r\n    });\r\n\r\n    const calculateReport = () => {\r\n        const currentDate = new Date();\r\n        const eventsByYear = events.filter(event => new Date(event.date).getFullYear() === currentDate.getFullYear());\r\n        const eventsByMonth = eventsByYear.filter(event => new Date(event.date).getMonth() === currentDate.getMonth());\r\n        const eventsByDay = eventsByMonth.filter(event => new Date(event.date).getDate() === currentDate.getDate());\r\n\r\n        const addressedCount = eventsByYear.filter(event => event.status === 'addressed').length;\r\n        const notAddressedCount = eventsByYear.filter(event => event.status === 'not addressed').length;\r\n\r\n        setReportData({\r\n            dailyAverage: eventsByDay.length,\r\n            monthlyAverage: eventsByMonth.length / new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate(),\r\n            yearlyAverage: eventsByYear.length / 12,\r\n            addressedCount,\r\n            notAddressedCount,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"report-generator\">\r\n            <h1>Event Report Generator</h1>\r\n            <button onClick={calculateReport}>Generate Report</button>\r\n            <div className=\"report-data\">\r\n                <h2>Report Data</h2>\r\n                <p>Daily Average Events: {reportData.dailyAverage}</p>\r\n                <p>Monthly Average Events: {reportData.monthlyAverage.toFixed(2)}</p>\r\n                <p>Yearly Average Events: {reportData.yearlyAverage.toFixed(2)}</p>\r\n                <p>Addressed Events: {reportData.addressedCount}</p>\r\n                <p>Not Addressed Events: {reportData.notAddressedCount}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReportGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
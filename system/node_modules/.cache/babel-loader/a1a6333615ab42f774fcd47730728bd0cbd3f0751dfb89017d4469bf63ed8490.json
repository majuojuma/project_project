{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAJUO\\\\Desktop\\\\FTEND\\\\system\\\\src\\\\component\\\\Person\\\\EventResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Navigation/Nav';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventResponse = () => {\n  _s();\n  const [eventResponses, setEventResponses] = useState([{\n    eventId: 1,\n    eventName: 'Fire at Market',\n    station: 'Fire Camp',\n    status: 'Being Handled',\n    estimatedTime: '30 minutes'\n  }, {\n    eventId: 2,\n    eventName: 'Burglary at Shop',\n    station: 'Police Station',\n    status: 'Will be Handled Soon',\n    estimatedTime: '1 hour'\n  }, {\n    eventId: 3,\n    eventName: 'Boat Capsized',\n    station: 'KMKM',\n    status: 'Being Handled',\n    estimatedTime: '15 minutes'\n  }]);\n  useEffect(() => {\n    // Fetch event responses from the server or API here\n    // For example: fetchEventResponses().then(data => setEventResponses(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Event Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-list\",\n        children: eventResponses.map(response => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: response.eventName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Station:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 28\n            }, this), \" \", response.station]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 28\n            }, this), \" \", response.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estimated Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 28\n            }, this), \" \", response.estimatedTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, response.eventId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EventResponse, \"KEBA+SZzkHq9hpXArB5/QWQWqiI=\");\n_c = EventResponse;\nexport default EventResponse;\nvar _c;\n$RefreshReg$(_c, \"EventResponse\");","map":{"version":3,"names":["React","useState","useEffect","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","EventResponse","_s","eventResponses","setEventResponses","eventId","eventName","station","status","estimatedTime","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","response","_c","$RefreshReg$"],"sources":["C:/Users/MAJUO/Desktop/FTEND/system/src/component/Person/EventResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Nav from '../Navigation/Nav';\r\n\r\nconst EventResponse = () => {\r\n    const [eventResponses, setEventResponses] = useState([\r\n        {\r\n            eventId: 1,\r\n            eventName: 'Fire at Market',\r\n            station: 'Fire Camp',\r\n            status: 'Being Handled',\r\n            estimatedTime: '30 minutes',\r\n        },\r\n        {\r\n            eventId: 2,\r\n            eventName: 'Burglary at Shop',\r\n            station: 'Police Station',\r\n            status: 'Will be Handled Soon',\r\n            estimatedTime: '1 hour',\r\n        },\r\n        {\r\n            eventId: 3,\r\n            eventName: 'Boat Capsized',\r\n            station: 'KMKM',\r\n            status: 'Being Handled',\r\n            estimatedTime: '15 minutes',\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        // Fetch event responses from the server or API here\r\n        // For example: fetchEventResponses().then(data => setEventResponses(data));\r\n    }, []);\r\n\r\n    return (\r\n        <><Nav />\r\n        <div className=\"event-response\">\r\n            <h1>Event Responses</h1>\r\n            <div className=\"response-list\">\r\n                {eventResponses.map(response => (\r\n                    <div key={response.eventId} className=\"response-item\">\r\n                        <h2>{response.eventName}</h2>\r\n                        <p><strong>Station:</strong> {response.station}</p>\r\n                        <p><strong>Status:</strong> {response.status}</p>\r\n                        <p><strong>Estimated Time:</strong> {response.estimatedTime}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventResponse;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}